This is a demo task.

Write a function:

def solution(A)

that, given an array A of N integers, returns the smallest positive integer (greater than 0) that does not occur in A.

For example, given A = [1, 3, 6, 4, 1, 2], the function should return 5.

Given A = [1, 2, 3], the function should return 4.

Given A = [−1, −3], the function should return 1.

Write an efficient algorithm for the following assumptions:

N is an integer within the range [1..100,000];
each element of array A is an integer within the range [−1,000,000..1,000,000].



def solution(A):
    sorted_array = A.sort()
    for i in sorted_array:
        if sorted_array[-1] >



A = [1, 3, 6, 4, 1, 2]
A = [1, 1, 2, 3, 4, 6]



"""MY ANSWER""" *IT'S WRONG*
def solution(A):
    sorted_array = A.sort()
    largest = sorted_array[-1]
    if largest <= 0:
        return 1
    if largest - 1 not in sorted_array:
        return largest - 1
    else:
        return largest + 1

"""EARL'S ANSWER""" *CORRECT*
def solution(A):
   nums = set(A)
   to_remove = set()

   for num in nums:
      if num < 1:
         to_remove.add(num)
   nums = nums - to_remove
   return min(set(range(1, len(nums) + 2)) - nums)
